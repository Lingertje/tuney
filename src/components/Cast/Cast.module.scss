@use '../../css/config' as *;
@use "sass:map";

.cast-card {
    position: relative;
    flex-shrink: 0;
    width: 200px;
    height: 300px;
    margin: 16px 16px 16px 0;
    border-radius: 4px;
    overflow: hidden;
    outline: none;
    transition: transform 200ms ease-out;

    img {
        width: 200px;
        height: 300px;
    }

    &__body {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        padding: 8px 8px 12px;
        z-index: 10;

        & > .cast-card__name,
        & > .cast-card__role {
            display: block;
        }

        & > .cast-card__name {
            font-size: 20px;
            font-weight: 500;
            letter-spacing: 0.5px;
            margin-bottom: 4px;
        }

        & > .cast-card__role {
            font-size: 16px;
        }
    }

    &::after {
        content: '';
        position: absolute;
        inset: 0;
        background: linear-gradient(to top, rgba(#000, 0.8), rgba(#000, 0.2) 100%);
    }

    &:hover,
    &:focus-within {
        transform: scale(1.05);
        z-index: 100;
    }
}

.cast-list {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap !important;
    overflow-x: auto;
    padding: 0 15px;
    margin-bottom: 32px;

    @each $bp, $width in $container-width {
        @include media-query($bp) {
            padding-left: calc(50% - 0.5*#{$width}px + 15px);
        }
    }
}

.cast-skeleton {
    position: relative;
    width: 200px;
    height: 300px;
    margin: 15px 30px 15px 0;
    border-radius: 4px;
    background-color: rgba(#000, 0.2);
    flex-shrink: 0;

    svg {
        width: 100px;
        height: 100px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        fill: rgba(#fff, 0.08);
        animation: rotating 1.2s ease-out infinite;
    }
}

@keyframes rotating {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
    }

    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}
